services:
  postgres:
    image: bitnami/postgresql:latest
    container_name: go-contactsdb
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USERNAME=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DATABASE=contactsdb
    volumes:
      - postgres_data:/bitnami/postgresql

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: go-contacts-api
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      - POSTGRES_USERNAME=docker
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DATABASE=contactsdb
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    restart: always

volumes:
  postgres_data:
  prometheus_data:
  grafana_data: