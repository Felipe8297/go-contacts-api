// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/contacts": {
            "get": {
                "description": "Retorna uma lista de todos os contatos cadastrados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Listar todos os contatos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/contacts.Contact"
                            }
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Cria um novo contato com as informações fornecidas",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Criar um novo contato",
                "parameters": [
                    {
                        "description": "Dados do contato",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contacts.CreateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/contacts.Contact"
                        }
                    },
                    "400": {
                        "description": "Erro de validação dos dados",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "get": {
                "description": "Retorna um contato específico com base no ID fornecido",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Buscar contato por ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do contato",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contacts.Contact"
                        }
                    },
                    "404": {
                        "description": "Contato não encontrado",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Atualiza os dados de um contato existente",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Atualizar contato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do contato",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dados atualizados do contato",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/contacts.UpdateContactRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/contacts.Contact"
                        }
                    },
                    "400": {
                        "description": "Erro de validação dos dados",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Contato não encontrado",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove um contato existente da base de dados",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contacts"
                ],
                "summary": "Excluir contato",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID do contato",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Contato removido com sucesso"
                    },
                    "404": {
                        "description": "Contato não encontrado",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Erro interno do servidor",
                        "schema": {
                            "$ref": "#/definitions/contacts.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contacts.Contact": {
            "description": "Informações de um contato",
            "type": "object",
            "properties": {
                "category_id": {
                    "description": "ID da categoria",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174111"
                },
                "created_at": {
                    "description": "Data de criação",
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                },
                "email": {
                    "description": "Email do contato",
                    "type": "string",
                    "example": "joao@example.com"
                },
                "id": {
                    "description": "ID único do contato",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "description": "Nome do contato",
                    "type": "string",
                    "example": "João Silva"
                },
                "phone": {
                    "description": "Telefone do contato",
                    "type": "string",
                    "example": "11999998888"
                },
                "updated_at": {
                    "description": "Data de atualização",
                    "type": "string",
                    "example": "2023-01-01T12:00:00Z"
                }
            }
        },
        "contacts.CreateContactRequest": {
            "description": "Dados para criação de um contato",
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "category_id": {
                    "description": "ID da categoria",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "email": {
                    "description": "Email do contato",
                    "type": "string",
                    "example": "joao@example.com"
                },
                "name": {
                    "description": "Nome do contato",
                    "type": "string",
                    "example": "João Silva"
                },
                "phone": {
                    "description": "Telefone do contato",
                    "type": "string",
                    "example": "11999998888"
                }
            }
        },
        "contacts.ErrorResponse": {
            "description": "Estrutura padrão para respostas de erro",
            "type": "object",
            "properties": {
                "error": {
                    "description": "Mensagem de erro",
                    "type": "string",
                    "example": "Mensagem de erro"
                }
            }
        },
        "contacts.UpdateContactRequest": {
            "description": "Dados para atualização de um contato",
            "type": "object",
            "properties": {
                "category_id": {
                    "description": "ID da categoria",
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174999"
                },
                "email": {
                    "description": "Email do contato",
                    "type": "string",
                    "example": "joao.novo@example.com"
                },
                "name": {
                    "description": "Nome do contato",
                    "type": "string",
                    "example": "João Silva Atualizado"
                },
                "phone": {
                    "description": "Telefone do contato",
                    "type": "string",
                    "example": "11999997777"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
